name: deploy-frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push frontend image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REPO=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/seneca-frontend:latest
          echo "Building and pushing $ECR_REPO"
          docker build --no-cache -t seneca-frontend .
          docker tag seneca-frontend:latest $ECR_REPO
          docker push $ECR_REPO

      - name: Fill in new image ID in ECS task definition
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REPO=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/seneca-frontend:latest
          cat ecs-task-frontend.json | jq --arg IMAGE "$ECR_REPO" \
            '.containerDefinitions[0].image = $IMAGE' > ecs-task-frontend-updated.json

      - name: Deploy to ECS
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://ecs-task-frontend-updated.json
          aws ecs update-service \
            --cluster seneca-cluster \
            --service seneca-frontend-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
